# -*- coding: utf-8 -*-
"""crop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E1H9fcavFvnHLCxE82M6V_RSaTyK60su
"""

# IMPORTANT VARIABLES
resolution = 32 # new image resolution
path = "/content/drive/MyDrive/work/image_crop/"

# VISUALIZATION
line_color = 'red'
line_width = 3

# from google.colab import drive
# drive.mount("/content/drive/")

input_path = path + "input/"

from os import listdir
from os.path import isfile, join
files = [f for f in listdir(input_path) if isfile(join(input_path, f))]

print(files)

from PIL import Image, ImageFilter, ImageDraw


def edit(img_path):
    
    im = Image.open( img_path )

    res: int = min(im.width, im.height) # res != resolution

    center_x = im.width / 2
    center_y = im.height / 2

    ox = center_x - res / 2
    oy = center_y - res / 2


    up = (ox, oy, ox + res, oy)
    down = (ox, oy + res, ox + res, oy + res)
    left = (ox, oy, ox, oy + res)
    right = (ox + res, oy, ox + res, oy + res)


    new_im = im.crop((left[0], up[1], right[0], down[1]))
    newsize = (resolution, resolution)
    new_im = new_im.resize(newsize)

    draw = ImageDraw.Draw(im) 

    draw.line(up, fill=line_color, width=line_width)
    draw.line(down, fill=line_color, width=line_width)
    draw.line(left, fill=line_color, width=line_width)
    draw.line(right, fill=line_color, width=line_width)

    # SAVE IMAGE
    output_path = img_path.replace("input", "output")
    new_im.save(output_path)
    
    #im.show(im)
    # display(im)
    print()
    display(new_im)

for img_filename in files:
    img_path = input_path + img_filename

    edit(img_path)

""""
from PIL import Image, ImageFilter, ImageDraw

img_path = "/content/drive/MyDrive/work/image_crop/test.png"
im = Image.open( img_path )

res: int = min(im.width, im.height) # res != resolution

center_x = im.width / 2
center_y = im.height / 2

ox = center_x - res / 2
oy = center_y - res / 2


up = (ox, oy, ox + res, oy)
down = (ox, oy + res, ox + res, oy + res)
left = (ox, oy, ox, oy + res)
right = (ox + res, oy, ox + res, oy + res)


new_im = im.crop((left[0], up[1], right[0], down[1]))
newsize = (resolution, resolution)
new_im = new_im.resize(newsize)

draw = ImageDraw.Draw(im) 

draw.line(up, fill=line_color, width=line_width)
draw.line(down, fill=line_color, width=line_width)
draw.line(left, fill=line_color, width=line_width)
draw.line(right, fill=line_color, width=line_width)

#im.show(im)

display(im)
print()
display(new_im)

import tkinter
from PIL import Image, ImageTk
from sys import argv

window = tkinter.Tk(className="bla")

image = Image.open(argv[1] if len(argv) >=2 else "bla2.png")
canvas = tkinter.Canvas(window, width=image.size[0], height=image.size[1])
canvas.pack()
image_tk = ImageTk.PhotoImage(image)
canvas.create_image(image.size[0]//2, image.size[1]//2, image=image_tk)

def callback(event):
    print("foog")

canvas.bind("<Button-1>", callback)
tkinter.mainloop()
"""
